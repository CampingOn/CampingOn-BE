name: JAVA CI with Gradle and Deploy

on:
  push:
    branches: [ "dev", "main" ]

jobs:
  # 빌드 단계 시작
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - name: Checkout sources
      uses: actions/checkout@v4.2.2

    # Java 설치 및 그래들로 빌드
    - name: Set up JDK 21
      uses: actions/setup-java@v4.5.0
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: gradle # Gradle 의존성 캐싱 활성화

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew
      
    - name: Build with Gradle
      uses: ./gradlew build -x test

    # 빌드 결과물 업로드
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.4.3
      with:
        name: camping-on
        path: build/libs/*SNAPSHOT.jar


  # deploy 단계 시작
  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4.2.2
    

    # 1. 아티팩트에 업로드된 Jar 파일 다운로드
    - name: Download a Build Artifact
      uses: actions/download-artifact@v4.1.8
      with:
        name: camping-on

    # 2. 빌드된 jar 파일을 EC2로 전송
    - name: Copy jar to EC2
      run: |
        rsync -avz -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" *SNAPSHOT.jar ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:${{ secrets.EC2_TARGET_PATH }}

    # 3. EC2에서 환경 변수를 설정하고 애플리케이션 실행
    - name: Run jar on EC2 with environment variables
      uses: appleboy/ssh-action@v1.1.0
      with:
        host: ${{secrets.EC2_HOST}}
        username: ${{secrets.EC2_USERNAME}}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        port: 22
        script: |
          # 8080 포트를 사용하는 기존 애플리케이션 종료
          PID=$(lsof -t -i :8080)
          if [ -n "$PID" ]; then
            echo "Stopping existing application with PID: $PID"
            kill -9 $PID
          else
            echo "No application running on port 8080"
          fi

          # 환경 변수 파일 로드
          if [ -f "${{ secrets.ENV_FILE_PATH }}" ]; then
            source ${{ secrets.ENV_FILE_PATH }}
          else
            echo "Environment file not found"
            exit 1
          fi
          
          #새로운 애플리케이션 배포 및 실행
          cd ${{ secrets.EC2_TARGET_PATH }}
          nohup java -Duser.timezone=Asia/Seoul -Dspring.profiles.active=prod -jar *.jar
          echo "New application deployed and started."
          
