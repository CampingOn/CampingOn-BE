name: Auto Deployment with Docker Hub

on:
  push:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 소스 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      # 2. Docker Hub 로그인
      - name: Log in to Docker Hub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 3. Docker 이미지 빌드 및 푸시
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6.10.0
        with:
          context: .
          file: ./Dockerfile
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/ ${{ secrets.DOCKER_PASSWORD }}:latest
          push: true
          pull: true
          platforms: linux/amd64
        

      # 4. EC2에서 Pull 및 실행
      - name: Deploy to EC2
        run: |
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          
          ssh -i private_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
            # Docker Hub 로그인
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          
            # Docker Hub에서 최신 이미지 Pull
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:latest

            # 기존 컨테이너 중지 및 삭제
            docker stop camping-on || true
            docker rm camping-on || true

            # 새로운 컨테이너 실행
            docker run -d \
              --name camping-on \
              --env-file ${{ secrets.EC2_TARGET_PATH }}/.env \
              -p 8080:8080 \
              ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:latest
          EOF

      # 5. Docker 이미지 정리
      - name: Clean up Docker images
        run: docker image prune -af
